plugins {
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'com.jfrog.bintray' version '1.8.5'
}

def versionObj = new Version(major: 0, minor: 7, revision: 7)

group 'com.github.natanbc'
version "${versionObj}"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'com.github.natanbc:native-loader:0.7.0'
    compileOnly 'com.sedmelluq:lavaplayer:1.3.66'
    testCompile 'com.sedmelluq:lavaplayer:1.3.66'
    testCompile 'ch.qos.logback:logback-classic:1.2.5'
}

import org.apache.tools.ant.filters.ReplaceTokens

task sourcesForRelease(type: Copy) {
    from 'src/main/java'
    into 'build/filteredSrc'
    filter(ReplaceTokens, tokens: [
            VERSION_MAJOR: versionObj.getMajor(),
            VERSION_MINOR: versionObj.getMinor(),
            VERSION_REVISION: versionObj.getRevision(),
            COMMIT_HASH: getCommitHash()
    ])
}

compileJava {
    source = sourcesForRelease.destinationDir
    classpath = sourceSets.main.compileClasspath

    options.encoding = 'UTF-8'

    dependsOn sourcesForRelease
}

jar {
    baseName = project.name
    manifest {
        attributes 'Implementation-Version': version
    }
}

shadowJar {
    classifier = "withDependencies"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from "${buildDir}/filteredSrc"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


publishing {
    publications {
        BintrayRelease(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName

            artifact sourcesJar {
                classifier 'sources'
            }

            artifact javadocJar {
                classifier 'javadoc'
            }
        }
    }
}

bintray {
    version = "${versionObj}"
    user = getProjectProperty("BINTRAY_USERNAME")
    key = getProjectProperty("BINTRAY_API_KEY")
    publications = ["BintrayRelease"]
    pkg {
        repo = 'maven'
        name = project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/natanbc/lavadsp.git'
        publish = true
        version {
            name = project.version.toString()
            released = new Date()
        }
    }
}

String getProjectProperty(String propertyName) {
    String property
    if(hasProperty(propertyName)) {
        property = project.properties[propertyName]
    } else {
        property = System.getenv(propertyName) ?: ""
    }
    return property
}

bintrayUpload {
    dependsOn shadowJar

    onlyIf { !getProjectProperty("BINTRAY_USERNAME").empty }
    onlyIf { !getProjectProperty("BINTRAY_API_KEY").empty }
}

static def getCommitHash() {
    def p = Runtime.getRuntime().exec("git rev-parse HEAD")
    p.waitFor()
    p.getIn().text.trim()
}

class Version {
    String major, minor, revision


    String toString() {
        "${major}.${minor}" + (revision == "0" ? "" : ".${revision}")
    }
}

